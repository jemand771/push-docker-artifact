name: artifact-push
description: Push docker image workflow artifacts to ghcr
inputs:
  GITHUB_TOKEN:
    description: Token for accessing ghcr. Set to github.token. Omit to disable docker login.
    required: false
runs:
  using: composite
  steps:
    - name: Print related workflow
      run: echo '${{ toJson(github.event) }}'
      shell: bash
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      if: ${{ inputs.GITHUB_TOKEN != '' }}
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.GITHUB_TOKEN }}
    - name: Download images
      uses: actions/github-script@v6.4.1
      with:
        script: |
          var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{github.event.workflow_run.id }},
          });
          var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
            return artifact.name == "docker-images"
          })[0];
          var download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
          });
          var fs = require('fs');
          fs.writeFileSync('${{github.workspace}}/docker-images.zip', Buffer.from(download.data));
    - run: unzip docker-images.zip
      shell: bash
    - name: import images
      run: for file in *.tar; do echo "loading $file"; docker load < $file; done
      shell: bash
    - run: docker image ls
      shell: bash
    - name: push all images
      run: for image in $(cat docker-images.txt); do echo pushing $image; docker push $image; done
      shell: bash
